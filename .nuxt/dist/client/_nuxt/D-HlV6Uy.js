import{P as O,am as n,an as $,J as x,ao as C,ab as E}from"./OmrnE3d5.js";function A(o,r,u){const[e={},c]=typeof r=="string"?[{},r]:[r,u],t=O(()=>n(o)),s=e.key||$([c,typeof t.value=="string"?t.value:"",...L(e)]);if(!s||typeof s!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+s);if(!o)throw new Error("[nuxt] [useFetch] request is missing.");const i=s===c?"$f"+s:s;if(!e.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:y,lazy:d,default:b,transform:g,pick:w,watch:h,immediate:v,getCachedData:_,deep:k,dedupe:D,...T}=e,l=x({...C,...T,cache:typeof e.cache=="boolean"?void 0:e.cache}),F={server:y,lazy:d,default:b,transform:g,pick:w,immediate:v,getCachedData:_,deep:k,dedupe:D,watch:h===!1?[]:[l,t,...h||[]]};let a;return E(i,()=>{var m;(m=a==null?void 0:a.abort)==null||m.call(a),a=typeof AbortController<"u"?new AbortController:{};const p=n(e.timeout);let f;return p&&(f=setTimeout(()=>a.abort(),p),a.signal.onabort=()=>clearTimeout(f)),(e.$fetch||globalThis.$fetch)(t.value,{signal:a.signal,...l}).finally(()=>{clearTimeout(f)})},F)}function L(o){var u;const r=[((u=n(o.method))==null?void 0:u.toUpperCase())||"GET",n(o.baseURL)];for(const e of[o.params||o.query]){const c=n(e);if(!c)continue;const t={};for(const[s,i]of Object.entries(c))t[n(s)]=n(i);r.push(t)}return r}export{A as u};

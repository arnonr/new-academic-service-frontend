{"version":3,"file":"auth-Ds3h1m1J.js","sources":["../../../../store/auth.js"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport const useAuthStore = defineStore(\"auth\", {\n    state: () => ({\n        authenticated: false,\n        loading: false,\n    }),\n    actions: {\n        async authenticateUser({ email, password }) {\n            // useFetch from nuxt 3\n            const runtimeConfig = useRuntimeConfig();\n\n            const { data, pending } = await useFetch(\n                `${runtimeConfig.public.apiBase}/user/login`,\n                {\n                    method: \"post\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: {\n                        username: email,\n                        password,\n                    },\n                }\n            );\n            this.loading = pending;\n\n            if (data.value) {\n                const token = useCookie(\"token\"); // useCookie new hook in nuxt 3\n                token.value = data?.value?.token; // set token to cookie\n                const user = useCookie(\"user\");\n\n                user.value = {\n                    id: data?.value?.id,\n                    username: data?.value?.username,\n                    email: data?.value?.email,\n                    department_id: data?.value?.department_id,\n                    name: data?.value?.name,\n                    group_id: data?.value?.group_id,\n                };\n\n                this.authenticated = true; // set authenticated  state value to true\n            }\n        },\n        logUserOut() {\n            const token = useCookie(\"token\"); // useCookie new hook in nuxt 3\n            const user = useCookie(\"user\"); // useCookie new hook in nuxt 3\n            this.authenticated = false; // set authenticated  state value to false\n            token.value = null; // clear the token cookie\n            user.value = null; // clear the token cookie\n            console.log(\"Logout Success\");\n        },\n    },\n});\n"],"names":[],"mappings":";;AAEY,MAAC,eAAe,YAAY,QAAQ;AAAA,EAC5C,OAAO,OAAO;AAAA,IACV,eAAe;AAAA,IACf,SAAS;AAAA,EACjB;AAAA,EACI,SAAS;AAAA,IACL,MAAM,iBAAiB,EAAE,OAAO,YAAY;;AAExC,YAAM,gBAAgB;AAEtB,YAAM,EAAE,MAAM,QAAS,IAAG,MAAM;AAAA,QAC5B,GAAG,cAAc,OAAO,OAAO;AAAA,QAC/B;AAAA,UACI,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAoB;AAAA,UAC/C,MAAM;AAAA,YACF,UAAU;AAAA,YACV;AAAA,UACH;AAAA,QACJ;AAAA,QACL;AAAA,MAAA;AACA,WAAK,UAAU;AAEf,UAAI,KAAK,OAAO;AACZ,cAAM,QAAQ,UAAU,OAAO;AAC/B,cAAM,SAAQ,kCAAM,UAAN,mBAAa;AAC3B,cAAM,OAAO,UAAU,MAAM;AAE7B,aAAK,QAAQ;AAAA,UACT,KAAI,kCAAM,UAAN,mBAAa;AAAA,UACjB,WAAU,kCAAM,UAAN,mBAAa;AAAA,UACvB,QAAO,kCAAM,UAAN,mBAAa;AAAA,UACpB,gBAAe,kCAAM,UAAN,mBAAa;AAAA,UAC5B,OAAM,kCAAM,UAAN,mBAAa;AAAA,UACnB,WAAU,kCAAM,UAAN,mBAAa;AAAA,QAC3C;AAEgB,aAAK,gBAAgB;AAAA,MACxB;AAAA,IACJ;AAAA,IACD,aAAa;AACT,YAAM,QAAQ,UAAU,OAAO;AAC/B,YAAM,OAAO,UAAU,MAAM;AAC7B,WAAK,gBAAgB;AACrB,YAAM,QAAQ;AACd,WAAK,QAAQ;AACb,cAAQ,IAAI,gBAAgB;AAAA,IAC/B;AAAA,EACJ;AACL,CAAC;"}